model  GPL
elements: 
	boolean WithEdges
	boolean WithNeighbors
	boolean OnlyVertices
	boolean Implementation
	boolean Undirected
	boolean Directed
	boolean Gtp
	boolean UndirectedOnlyVertices
	boolean UndirectedWithNeighbors
	boolean UndirectedWithEdges
	boolean DirectedOnlyVertices
	boolean DirectedWithNeighbors
	boolean DirectedWithEdges
	boolean HiddenGtp
	boolean WeightedOnlyVertices
	boolean WeightedWithNeighbors
	boolean WeightOptions
	boolean HiddenWgt
	boolean DFS
	boolean Src
	boolean MSTKruskal
	boolean MSTPrim
	boolean Cycle
	boolean StronglyConnected
	boolean Transpose
	boolean StrongC
	boolean Alg
	boolean TestProg
	boolean MainGpl
	boolean GPL
relations:
	r0: common(GPL)
	r1:decomposition(GPL,[MainGpl],[1,1])
	r2:decomposition(MainGpl,[TestProg],[1,1])
	r3:decomposition(MainGpl,[Alg],[1,1])
	r4:decomposition(StrongC,[Transpose],[1,1])
	r5:decomposition(StrongC,[StronglyConnected],[1,1])
	r6:decomposition(Alg,[Cycle],[0,1])
	r7:decomposition(Alg,[MSTPrim],[0,1])
	r8:decomposition(Alg,[MSTKruskal],[0,1])
	r9:decomposition(Src,[DFS],[1,1])
	r10:decomposition(MainGpl,[HiddenWgt],[1,1])
	r11:decomposition(HiddenWgt,[WeightOptions],[1,1])
	r12:decomposition(WeightOptions,[WeightedWithNeighbors],[0,1])
	r13:decomposition(WeightOptions,[WeightedOnlyVertices],[0,1])
	r14:group(HiddenGtp,[DirectedWithEdges, DirectedWithNeighbors, DirectedOnlyVertices, UndirectedWithEdges, UndirectedWithNeighbors, UndirectedOnlyVertices],[1,1])
	r15:decomposition(MainGpl,[HiddenGtp],[1,1])
	r16:group(Gtp,[Directed, Undirected],[1,1])
	r17:decomposition(MainGpl,[Gtp],[1,1])
	r18:group(Implementation,[OnlyVertices, WithNeighbors, WithEdges],[1,1])
	r19:decomposition(MainGpl,[Implementation],[1,1])
	r20:expression(((StrongC) => ((Directed) AND (DFS))))
	r21:expression(((Cycle) => ((Gtp) AND (DFS))))
	r22:expression((((MSTKruskal) OR (MSTPrim)) => (~ ((MSTKruskal) AND (MSTPrim)))))
	r23:expression((((OnlyVertices) AND (Directed)) => (DirectedOnlyVertices)))
	r24:expression((((WithNeighbors) AND (Directed)) => (DirectedWithNeighbors)))
	r25:expression((((WithEdges) AND (Directed)) => (DirectedWithEdges)))
	r26:expression((((OnlyVertices) AND (Undirected)) => (UndirectedOnlyVertices)))
	r27:expression((((WithNeighbors) AND (Undirected)) => (UndirectedWithNeighbors)))
	r28:expression((((WithEdges) AND (Undirected)) => (UndirectedWithEdges)))
	r29:expression(((~ (Alg)) OR (StrongC)))
	r30:expression(((~ (MSTKruskal)) OR (Undirected)))
	r31:expression(((~ (MSTPrim)) OR (Undirected)))
	r32:expression(((~ (WithNeighbors)) OR (WeightedWithNeighbors)))
	r33:expression(((~ (OnlyVertices)) OR (WeightedOnlyVertices)))
	r34:expression(((~ (MSTKruskal)) OR (WeightedWithNeighbors)))
	r35:expression(((~ (MSTKruskal)) OR (WeightedOnlyVertices)))
	r36:decomposition(MainGpl,[Src],[0,1])
	r37:decomposition(Alg,[StrongC],[0,1])
